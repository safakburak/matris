package matris.messagesocket;

import static org.junit.Assert.fail;

import java.net.SocketException;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;

public class MessageSocketTest {

	private MessageSocket socket1;
	private MessageSocket socket2;

	private String socket1Sent;
	private String socket2Sent;

	private String socket1Received;
	private String socket2Received;

	@Before
	public void setup() throws SocketException {

		socket1 = new MessageSocket(1234);
		socket2 = new MessageSocket(4321);

		socket1.addListener(new MessageSocketListener() {

			@Override
			public void onMessage(Message message) {

				socket1Received = message.toString();
			}
		});

		socket2.addListener(new MessageSocketListener() {

			@Override
			public void onMessage(Message message) {

				socket2Received = message.toString();
			}
		});

		TestMessage message1 = new TestMessage();
		TestMessage message2 = new TestMessage();

		socket1Sent = message1.toString();
		socket2Sent = message2.toString();

		socket1.send(message1, "localhost", 4321);
	}

	@Test
	public void test() {

		try {

			Thread.sleep(2000);

		} catch (InterruptedException e) {

			e.printStackTrace();
		}

		fail("Not yet implemented");
	}

	@After
	public void clean() {

	}
}
